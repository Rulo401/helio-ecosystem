{
    "builder": "SIoTRxBuilder",
    "description": "## GeoSPARQL\r\n[GeoSPARQL](https:\/\/www.ogc.org\/standard\/geosparql\/) is a standard from the Open Geospatial Consortium which supports representing and querying geospatial data on the Semantic Web. For the complete GeoSPARQL 1.1 specification visit this [link](https:\/\/opengeospatial.github.io\/ogc-geosparql\/geosparql11\/spec.pdf).\r\n## Theory\r\nThe GeoSPARQL ontology defines a vocabulary to represent geospatial data in RDF.  \r\n![GeoSPARQL Ontology diagram](https:\/\/opengeospatial.github.io\/ogc-geosparql\/geosparql11\/img\/ont-overview.png)\r\nThe **Feature** class that is the basic core of the ontology defines a discrete spatial phenomenom, basically everything with geospatial data. Moreover,  an instance of **Geometry** is used to relate this data to the feature by linking them with the ***hasGeometry*** property.\r\n\r\nEach **Geometry** can have the  ***hasSerialization*** property or one of its subproperties in order to be linked to a geospatial data serialization (point coordinates, for example) that can be represented in multiple formats. \r\n\r\nOne of those formats is **Well-Known Text** which is defined in RDF as **WKT Literal** datatype. A WKT Literal consist of an optional IRI (coordinate reference system) and a WKT geometric value. The WGS84 coordinate system will be used in the case that the IRI is not specified. An example of coordinates expressed as WKT Literal might be *\"Point(-3.70 40.41)\"^^\\<http:\/\/www.opengis.net\/ont\/geosparql#wktLiteral>*. In this case, the ***asWKT*** property is used instead of ***hasSerialization***.\r\n\r\nNote that in order to apply GeoSPARQL to our ontology, each class with geospatial data must inherit from the **Feature** class.\r\n## Hands-on\r\n### Task\r\nProcess the data from the JSON file following the GeoSPARQL ontology and without considering the *features*. Remember to use the URL http:\/\/sample.com\/resource\/ followed by class\/name for the subjects.\r\n### JSON file content\r\n```json\r\n[\r\n  {\r\n\t\"name\": \"Oneonta\",\r\n\t\"features\": {\r\n\t\t\"surface\": {\r\n\t\t\t\"value\": 90.16,\r\n\t\t\t\"units\": \"Km2\"\r\n\t\t},\r\n\t\t\"population\": {\r\n\t\t\t\"amount\": \"1,812\",\r\n\t\t\t\"date\": 2018\r\n\t\t}\r\n\t},\r\n\t\"location\": {\r\n\t\t\"latitude\": \"44.9625428\",\r\n\t\t\"longitude\": \"-74.4168577\"\r\n\t}\r\n  },\r\n  {\r\n\t\"name\": \"Iowa\",\r\n\t\"features\": {\r\n\t\t\"surface\": {\r\n\t\t\t\"value\": 167.2,\r\n\t\t\t\"units\": \"Km2\"\r\n\t\t},\r\n\t\t\"population\": {\r\n\t\t\t\"amount\": \"133,611\",\r\n\t\t\t\"date\": 2020\r\n\t\t}\r\n\t},\r\n\t\"location\": {\r\n\t\t\"latitude\": \"29.6862705\",\r\n\t\t\"longitude\": \"-82.319746\"\r\n\t}\r\n  }...\r\n]\r\n```",
    "user_template": "<#assign locations=providers(\"HttpProvider\", { \"method\" : \"GET\", \"url\" : \"https:\/\/raw.githubusercontent.com\/helio-ecosystem\/helio-ecosystem\/main\/resources\/mappings-data\/ldac\/nested_locations1.json\"})>\r\n<#assign locations = locations?eval>\r\n@prefix geo: <http:\/\/www.opengis.net\/ont\/geosparql#> .\r\n<#-- WRITE BELOW -->",
    "solution_template": "<#assign locations=providers(\"HttpProvider\", { \"method\" : \"GET\", \"url\" : \"https:\/\/raw.githubusercontent.com\/helio-ecosystem\/helio-ecosystem\/main\/resources\/mappings-data\/ldac\/nested_locations1.json\"})>\r\n<#assign locations = locations?eval>\r\n@prefix geo: <http:\/\/www.opengis.net\/ont\/geosparql#> .\r\n<#-- WRITE BELOW -->\r\n\r\n<#list locations as place>\r\n<http:\/\/sample.com\/resource\/feature\/[=place.name]> a geo:Feature;\r\n\t<http:\/\/xmlns.com\/foaf\/0.1\/name> \"[=place.name]\" ;\r\n\tgeo:hasGeometry <http:\/\/sample.com\/resource\/geometry\/[=place.name]> .\r\n\r\n<http:\/\/sample.com\/resource\/geometry\/[=place.name]> a geo:Geometry;\r\n\tgeo:asWKT \"POINT([=place.location.longitude] [=place.location.latitude])\"^^geo:wktLiteral .<#sep>\r\n\r\n<\/#sep>\r\n<\/#list>",
    "expected_result": "@prefix geo: <http:\/\/www.opengis.net\/ont\/geosparql#> .\r\n\r\n<http:\/\/sample.com\/resource\/feature\/Oneonta> a geo:Feature;\r\n\t<http:\/\/xmlns.com\/foaf\/0.1\/name> \"Oneonta\" ;\r\n\tgeo:hasGeometry <http:\/\/sample.com\/resource\/geometry\/Oneonta> .\r\n\r\n<http:\/\/sample.com\/resource\/geometry\/Oneonta> a geo:Geometry;\r\n\tgeo:asWKT \"POINT(-74.4168577 44.9625428)\"^^geo:wktLiteral .\r\n\r\n<http:\/\/sample.com\/resource\/feature\/Iowa> a geo:Feature;\r\n\t<http:\/\/xmlns.com\/foaf\/0.1\/name> \"Iowa\" ;\r\n\tgeo:hasGeometry <http:\/\/sample.com\/resource\/geometry\/Iowa> .\r\n\r\n<http:\/\/sample.com\/resource\/geometry\/Iowa> a geo:Geometry;\r\n\tgeo:asWKT \"POINT(-82.319746 29.6862705)\"^^geo:wktLiteral .\r\n\r\n<http:\/\/sample.com\/resource\/feature\/Alberta> a geo:Feature;\r\n\t<http:\/\/xmlns.com\/foaf\/0.1\/name> \"Alberta\" ;\r\n\tgeo:hasGeometry <http:\/\/sample.com\/resource\/geometry\/Alberta> .\r\n\r\n<http:\/\/sample.com\/resource\/geometry\/Alberta> a geo:Geometry;\r\n\tgeo:asWKT \"POINT(-76.4098259 41.0816094)\"^^geo:wktLiteral .\r\n\r\n<http:\/\/sample.com\/resource\/feature\/Bock> a geo:Feature;\r\n\t<http:\/\/xmlns.com\/foaf\/0.1\/name> \"Bock\" ;\r\n\tgeo:hasGeometry <http:\/\/sample.com\/resource\/geometry\/Bock> .\r\n\r\n<http:\/\/sample.com\/resource\/geometry\/Bock> a geo:Geometry;\r\n\tgeo:asWKT \"POINT(-85.9562663 41.6908535)\"^^geo:wktLiteral .\r\n\r\n<http:\/\/sample.com\/resource\/feature\/Elmhurst> a geo:Feature;\r\n\t<http:\/\/xmlns.com\/foaf\/0.1\/name> \"Elmhurst\" ;\r\n\tgeo:hasGeometry <http:\/\/sample.com\/resource\/geometry\/Elmhurst> .\r\n\r\n<http:\/\/sample.com\/resource\/geometry\/Elmhurst> a geo:Geometry;\r\n\tgeo:asWKT \"POINT(-109.9103821 31.4199205)\"^^geo:wktLiteral ."
  }