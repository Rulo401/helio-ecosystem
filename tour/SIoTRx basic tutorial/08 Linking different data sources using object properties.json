{
    "builder": "SIoTRxBuilder",
    "description": "For linking data that is stored in different sources first they need to be loaded using providers. Then, the RDF triplets associated to these sources should be created. Finally, comparing the suitable values from the data some conditional triples relating subjects generated from both sources must be generated. For the example below, complete the mapping to link people to the places they live by using the property <http://xmlns.com/foaf/0.1/based_near>.",
    "user_template": "<#assign people=providers(\"HttpProvider\", { \"method\" : \"GET\", \"url\" : \"https://raw.githubusercontent.com/helio-ecosystem/helio-ecosystem/main/resources/mappings-data/ldac/people.csv\"})>\n<#assign peopleRows = people?trim?split(\"\\n\")>\n<#list peopleRows as personRow>\n<#if !personRow?is_first>\n<#assign personColumns = personRow?split(\",\")>\n<http://sample.com/resource/[=personColumns[0]]> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"[=personColumns[2]]\" ;\n    foaf:name [=personColumns[1]] .\n</#if>\n</#list>\n\n<#assign locations=providers(\"HttpProvider\", { \"method\" : \"GET\", \"url\" : \"https://raw.githubusercontent.com/helio-ecosystem/helio-ecosystem/main/resources/mappings-data/ldac/nested_locations1.json\"})>\n<#assign locations = locations?eval>\n<#list locations as location>\n<http://sample.com/resource/[=location.name]> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"[=location.name]\" ;\n    <http://vocab.es/schema#surface> \"[=location.features.surface.value] [=location.features.surface.units]\" .\n</#list>\n\n<#list peopleRows as personRow>\n<#if !personRow?is_first>\n<#assign personColumns = personRow?split(\",\")>\n<#list locations as location>\n  \n</#list>\n</#if>\n</#list>\n",
    "solution_template": "<#assign people=providers(\"HttpProvider\", { \"method\" : \"GET\", \"url\" : \"https://raw.githubusercontent.com/helio-ecosystem/helio-ecosystem/main/resources/mappings-data/ldac/people.csv\"})>\n<#assign peopleRows = people?trim?split(\"\\n\")>\n<#list peopleRows as personRow>\n<#if !personRow?is_first>\n<#assign personColumns = personRow?split(\",\")>\n<http://sample.com/resource/[=personColumns[0]]> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"[=personColumns[2]]\" ;\n    foaf:name [=personColumns[1]] .\n</#if>\n</#list>\n\n<#assign locations=providers(\"HttpProvider\", { \"method\" : \"GET\", \"url\" : \"https://raw.githubusercontent.com/helio-ecosystem/helio-ecosystem/main/resources/mappings-data/ldac/nested_locations1.json\"})>\n<#assign locations = locations?eval>\n<#list locations as location>\n<http://sample.com/resource/[=location.name]> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"[=location.name]\" ;\n    <http://vocab.es/schema#surface> \"[=location.features.surface.value] [=location.features.surface.units]\" .\n</#list>\n\n<#list peopleRows as personRow>\n<#if !personRow?is_first>\n<#assign personColumns = personRow?split(\",\")>\n<#list locations as location>\n  <#assign sameLocation= location.name?trim == personColumns[3]?trim>\n  <#if sameLocation>\n<http://sample.com/resource/[=personColumns[0]]> <http://xmlns.com/foaf/0.1/based_near> <http://sample.com/resource/[=location.name]> .\n  </#if>\n</#list>\n</#if>\n</#list>\n",
    "expected_result": "<http://sample.com/resource/1> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"585-610-2352\" ;\n    foaf:name \"Lily Dickens\" .\n<http://sample.com/resource/2> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"+1-352-334-0992\" ;\n    foaf:name \"Chadd Sporer\" .\n<http://sample.com/resource/3> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"(272) 642-0684\" ;\n    foaf:name \"Katharina Kuvalis\" .\n<http://sample.com/resource/4> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"574.747.4829\" ;\n    foaf:name \"Wilhelmine Johns III\" .\n<http://sample.com/resource/5> a <http://xmlns.com/foaf/0.1/Person> ;\n    foaf:phone \"+15204328362\" ;\n    foaf:name \"Sofia Rowe\" .\n\n<http://sample.com/resource/Oneonta> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"Oneonta\" ;\n    <http://vocab.es/schema#surface> \"90.16 Km2\" .\n<http://sample.com/resource/Iowa> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"Iowa\" ;\n    <http://vocab.es/schema#surface> \"167.2 Km2\" .\n<http://sample.com/resource/Alberta> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"Alberta\" ;\n    <http://vocab.es/schema#surface> \"33.75 Km2\" .\n<http://sample.com/resource/Bock> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"Bock\" ;\n    <http://vocab.es/schema#surface> \"73.74 Km2\" .\n<http://sample.com/resource/Elmhurst> a <http://schema.org/Place>;\n    <http://xmlns.com/foaf/0.1/name> \"Elmhurst\" ;\n    <http://vocab.es/schema#surface> \"13.42 Km2\" .\n\n<http://sample.com/resource/1> <http://xmlns.com/foaf/0.1/based_near> <http://sample.com/resource/Oneonta> .\n<http://sample.com/resource/2> <http://xmlns.com/foaf/0.1/based_near> <http://sample.com/resource/Iowa> .\n<http://sample.com/resource/3> <http://xmlns.com/foaf/0.1/based_near> <http://sample.com/resource/Alberta> .\n<http://sample.com/resource/4> <http://xmlns.com/foaf/0.1/based_near> <http://sample.com/resource/Bock> .\n<http://sample.com/resource/5> <http://xmlns.com/foaf/0.1/based_near> <http://sample.com/resource/Elmhurst> ."
}
