{
     "builder": "SIoTRxBuilder",
    "description": "## Practice on SHACL part V\n### Taking as input the mapping defined in the [Practice on SHACL part IV](https://helio-playground.linkeddata.es/tour/SIoTRx%20practice%20on%20actions/Practice%20on%20SHACL%20part%20IV) add a new `sh:PropertyShape` to the Shape. The new `sh:PropertyShape` must be related to the `sh:NodeShape` of the class *schema:CivicStructure* and define a `sh:path` restriction such as `( schema:address schema:postalCode )`. Finally, validate the validate the [lcc dataset](https://raw.githubusercontent.com/helio-ecosystem/helio-ecosystem/main/resources/siotrx/actions/shacl/lcc-dataset.ttl) using the [SHACL validator action](https://github.com/helio-ecosystem/helio-action-shacl-validator) (if you need help with this component have a view at [its tutorials](https://helio-playground.linkeddata.es/tour/SIoTRx%20tutorial%20on%20actions/SHACL%20validation%20-%20part%20I)) and query the RDF data and the report to know how many instances do not pass the validation (if you need a hint on how to perform the query have a look at the example [Validating RDF and querying it with its SHACL report](https://helio-playground.linkeddata.es/tour/SIoTRx%20examples/Validating%20RDF%20and%20querying%20it%20with%20its%20SHACL%20report)).<br /><br />Once the mapping is done, you can move to [Practice on SHACL part VI](https://helio-playground.linkeddata.es/tour/SIoTRx%20practice%20on%20actions/Practice%20on%20SHACL%20part%20VI) adding more complexity to the shape.",
    "solution_template": "<#-- Shape --> \r\n<#assign shape>\r\n@prefix schema: <http:\/\/schema.org\/> .\r\n@prefix sh: <http:\/\/www.w3.org\/ns\/shacl#> .\r\n@prefix ex: <http:\/\/shacl-practice.helio\/resource\/>.\r\n@prefix ec: <http:\/\/shacl-practice.helio\/ontology#>\r\n\r\nex:UPRNShape a sh:PropertyShape ;\r\n  sh:path ec:uprn ;\r\n  sh:minCount 1 . <#-- DONE: add the sh:minCount 1 restriction to the property shape-->\r\n\r\n\r\nex:CivicStructureShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CivicStructure ;\r\n  sh:property ex:UPRNShape .\r\n\r\nex:MuseumShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:Museum ;\r\n  sh:property ex:UPRNShape .\r\n\r\nex:UniversityShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CollegeOrUniversity ;\r\n  sh:property ex:UPRNShape .\r\n<\/#assign>\r\n\r\n<#--  DONE: fetch and cast the RDF into NT serialization -->\r\n<#assign rdf = providers(\"HttpProvider\", {\"method\" : \"GET\", \"url\" : \"https:\/\/raw.githubusercontent.com\/helio-ecosystem\/helio-ecosystem\/main\/resources\/siotrx\/actions\/shacl\/lcc-dataset.ttl\"})>\r\n<#assign config = {\"data-format\" : \"turtle\", \"output-format\" : \"nt\"}>\r\n<@action type=\"RdfCast\" data=rdf conf=config; result>\r\n<#assign rdf = result>\r\n<\/@action>\r\n\r\n\r\n<#-- Running the validation -->\r\n<#--  DONE: configure the action to output report in NT serialization -->\r\n<#assign config=\"{\\\"shape\\\" : \\\"\"+shape+\"\\\", \\\"output-format\\\" : \\\"nt\\\"  }\">\r\n<@action type=\"ShaclValidator\" data=rdf conf=config; report>\r\n<#--  DONE: Aggregate the RDF and the report into a variable-->\r\n<#assign rdf = rdf+\"\\n\"+report>\r\n<\/@action>\r\n\r\n<#--  DONE: Query the variable with the data and the shape and find out if any instance of schema:Cemetery do not pass the validation -->\r\n<#assign query = \"SELECT ?instance ?message ?path WHERE { ?instance a <http:\/\/schema.org\/Cemetery> . ?s <http:\/\/www.w3.org\/ns\/shacl#focusNode> ?instance . ?s <http:\/\/www.w3.org\/ns\/shacl#resultMessage> ?message . ?s <http:\/\/www.w3.org\/ns\/shacl#resultPath> ?path}\">\r\n<#assign config = '{\"query\" : \"'+query+'\" }'>\r\n<@action type=\"SparqlEngine\" data=rdf conf=config; result>\r\n[=result]\r\n<\/@action>\r\n",
    "user_template": "<#-- Shape --> \r\n<#assign shape>\r\n@prefix schema: <http:\/\/schema.org\/> .\r\n@prefix sh: <http:\/\/www.w3.org\/ns\/shacl#> .\r\n@prefix ex: <http:\/\/shacl-practice.helio\/resource\/>.\r\n@prefix ec: <http:\/\/shacl-practice.helio\/ontology#>\r\n\r\n<#--  TODO: add the sh:minCount 1 restriction to the property shape-->\r\nex:UPRNShape a sh:PropertyShape ;\r\n  sh:path ec:uprn .\r\n\r\nex:CivicStructureShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CivicStructure ;\r\n  sh:property ex:UPRNShape .\r\n\r\nex:MuseumShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:Museum ;\r\n  sh:property ex:UPRNShape .\r\n\r\nex:UniversityShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CollegeOrUniversity ;\r\n  sh:property ex:UPRNShape .\r\n<\/#assign>\r\n\r\n<#--  TODO: fetch and cast the RDF into NT serialization -->\r\n<#assign rdf=\"https:\/\/raw.githubusercontent.com\/helio-ecosystem\/helio-ecosystem\/main\/resources\/siotrx\/actions\/shacl\/lcc-dataset.ttl\">\r\n\r\n\r\n<#-- Running the validation -->\r\n<#--  TODO: configure the action to output report in NT serialization -->\r\n<#assign config=\"{\\\"shape\\\" : \\\"\"+shape+\"\\\" }\">\r\n<@action type=\"ShaclValidator\" data=rdf conf=config; report>\r\n<#--  TODO: Aggregate the RDF and the report into a variable-->\r\n<\/@action>\r\n\r\n<#--  TODO: Query the variable with the data and the shape and find out if any instance of schema:Cemetery do not pass the validation -->",
    "expected_result": "{ \"head\": {\r\n    \"vars\": [ \"instance\" , \"message\" , \"path\" ]\r\n  } ,\r\n  \"results\": {\r\n    \"bindings\": [\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryMorley\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryNewFarnley\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryGildersome\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryOtley\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryLawnswood\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryHarehills\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryLofthouse\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryPudsey\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryRothwell\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryYeadon\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryArmley\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryHorsforth\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryGuiseley\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      } ,\r\n      { \r\n        \"instance\": { \"type\": \"uri\" , \"value\": \"http:\/\/smartcity.linkeddata.es\/lcc\/resource\/Cemetery\/CemeteryHunslet\" } ,\r\n        \"message\": { \"type\": \"literal\" , \"value\": \"minCount[1]: Invalid cardinality: expected min 1: Got count = 0\" } ,\r\n        \"path\": { \"type\": \"uri\" , \"value\": \"http:\/\/shacl-practice.helio\/ontology#uprn\" }\r\n      }\r\n    ]\r\n  }\r\n}"
}
