{
     "builder": "SIoTRxBuilder",
    "description": "## Practice on SHACL part VI\n### Taking as input the mapping defined in the [Practice on SHACL part V](https://helio-playground.linkeddata.es/tour/SIoTRx%20practice%20on%20actions/Practice%20on%20SHACL%20part%20V) define a new `sh:NodeShape` that applies to any subject of the property *schema:postalCode* by using the restriction `sh:targetSubjectsOf`. Then, add a new `sh:PropertyShape` related to the property *schema:addressLocality* with the restriction `sh:minCount 1`. As a final step, relate the `sh:NodeShape` to the `sh:PropertyShape`. Finally, validate the [lcc dataset](https://raw.githubusercontent.com/helio-ecosystem/helio-ecosystem/main/resources/siotrx/actions/shacl/lcc-dataset.ttl) using the [SHACL validator action](https://github.com/helio-ecosystem/helio-action-shacl-validator) (if you need help with this component have a view at [its tutorials](https://helio-playground.linkeddata.es/tour/SIoTRx%20tutorial%20on%20actions/SHACL%20validation%20-%20part%20I)) and query the RDF data and the report to know how many instances do not pass the validation due to the new added restriction (if you need a hint on how to perform the query have a look at the example [Validating RDF and querying it with its SHACL report](https://helio-playground.linkeddata.es/tour/SIoTRx%20examples/Validating%20RDF%20and%20querying%20it%20with%20its%20SHACL%20report)). The query must return the total number of instances present in the dataset that are not conform to the shape, i.e., do not pass the validation, due to the new restrictions added.<br /><br />Once the mapping is done, you can move to [Practice on SHACL part VII](https://helio-playground.linkeddata.es/tour/SIoTRx%20practice%20on%20actions/Practice%20on%20SHACL%20part%20VII) adding more complexity to the shape.",
    "solution_template": "<#-- Shape --> \r\n<#assign shape>\r\n@prefix schema: <http:\/\/schema.org\/> .\r\n@prefix sh: <http:\/\/www.w3.org\/ns\/shacl#> .\r\n@prefix ex: <http:\/\/shacl-practice.helio\/resource\/>.\r\n@prefix ec: <http:\/\/shacl-practice.helio\/ontology#>\r\n\r\n<#-- DONE: define the new sh:NodeShape with restriction sh:targetSubjectsOf for property schema:postalCode  -->\r\nex:SubjectPostalCodeShape \r\n  a sh:NodeShape ; \r\n  sh:targetSubjectsOf schema:postalCode ; \r\n  sh:property ex:LocalityShape . <#-- DONE: relate the sh:NodeShape with the sh:PropertyShape -->\r\n\r\n<#-- DONE: define the new sh:PropertyShape for property schema:addressLocality and with restriction sh:minCount 1 -->\r\nex:LocalityShape \r\n  a sh:PropertyShape ;\r\n  sh:path schema:addressLocality ;\r\n  sh:minCount 1 .\r\n\r\nex:AddressPlusPostalShape \r\n  a sh:PropertyShape ;\r\n  sh:path ( schema:address schema:postalCode ) ;\r\n  sh:minCount 1 . \r\n\r\nex:UPRNShape a sh:PropertyShape ;\r\n  sh:path ec:uprn ;\r\n  sh:minCount 1 .\r\n\r\nex:CivicStructureShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CivicStructure ;\r\n  sh:property ex:UPRNShape, ex:AddressPlusPostalShape  .\r\n\r\nex:MuseumShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:Museum ;\r\n  sh:property ex:UPRNShape .\r\n\r\nex:UniversityShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CollegeOrUniversity ;\r\n  sh:property ex:UPRNShape .\r\n<\/#assign>\r\n\r\n<#--  Fetch and cast the RDF into NT serialization -->\r\n<#assign rdf = providers(\"HttpProvider\", {\"method\" : \"GET\", \"url\" : \"https:\/\/raw.githubusercontent.com\/helio-ecosystem\/helio-ecosystem\/main\/resources\/siotrx\/actions\/shacl\/lcc-dataset.ttl\"})>\r\n<#assign config = {\"data-format\" : \"turtle\", \"output-format\" : \"nt\"}>\r\n<@action type=\"RdfCast\" data=rdf conf=config; result>\r\n<#assign rdf = result>\r\n<\/@action>\r\n\r\n\r\n<#-- Running the validation -->\r\n<#-- configure the action to output report in NT serialization -->\r\n<#assign config=\"{\\\"shape\\\" : \\\"\"+shape+\"\\\", \\\"output-format\\\" : \\\"nt\\\"  }\">\r\n<@action type=\"ShaclValidator\" data=rdf conf=config; report>\r\n<#--  aggregate the RDF and the report into a variable-->\r\n<#assign rdf = rdf+\"\\n\"+report>\r\n<\/@action>\r\n\r\n<#--  TODO: change the query to return the number of instances in the dataset that are not conforming, i.e., not passing the validation, due to the new restrictions defined in the shape -->\r\n<#assign query> \r\nSELECT (count(distinct ?instance) as ?notConformingInstances) WHERE { \r\n    ?subject <http:\/\/www.w3.org\/ns\/shacl#focusNode> ?instance . \r\n    ?subject <http:\/\/www.w3.org\/ns\/shacl#sourceShape> <http:\/\/shacl-practice.helio\/resource\/LocalityShape> . \r\n} \r\n<\/#assign>\r\n<#assign config = '{\"query\" : \"'+query+'\" }'>\r\n<@action type=\"SparqlEngine\" data=rdf conf=config; result>\r\n[=result]\r\n<\/@action>\r\n",
    "user_template": "<#-- Shape --> \r\n<#assign shape>\r\n@prefix schema: <http:\/\/schema.org\/> .\r\n@prefix sh: <http:\/\/www.w3.org\/ns\/shacl#> .\r\n@prefix ex: <http:\/\/shacl-practice.helio\/resource\/>.\r\n@prefix ec: <http:\/\/shacl-practice.helio\/ontology#>\r\n\r\n<#-- TODO: define the new sh:NodeShape with restriction sh:targetSubjectsOf for property schema:postalCode  -->\r\n<#-- TODO: define the new sh:PropertyShape for property schema:addressLocality and with restriction sh:minCount 1 -->\r\n<#-- TODO: relate the sh:NodeShape with the sh:PropertyShape -->\r\n\r\nex:AddressPlusPostalShape \r\n  a sh:PropertyShape ;\r\n  sh:path ( schema:address schema:postalCode ) ;\r\n  sh:minCount 1 . \r\n\r\nex:UPRNShape a sh:PropertyShape ;\r\n  sh:path ec:uprn ;\r\n  sh:minCount 1 .\r\n\r\nex:CivicStructureShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CivicStructure ;\r\n  sh:property ex:UPRNShape, ex:AddressPlusPostalShape  .\r\n\r\nex:MuseumShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:Museum ;\r\n  sh:property ex:UPRNShape .\r\n\r\nex:UniversityShape \r\n  a sh:NodeShape ; \r\n  sh:targetClass schema:CollegeOrUniversity ;\r\n  sh:property ex:UPRNShape .\r\n<\/#assign>\r\n\r\n<#--  Fetch and cast the RDF into NT serialization -->\r\n<#assign rdf = providers(\"HttpProvider\", {\"method\" : \"GET\", \"url\" : \"https:\/\/raw.githubusercontent.com\/helio-ecosystem\/helio-ecosystem\/main\/resources\/siotrx\/actions\/shacl\/lcc-dataset.ttl\"})>\r\n<#assign config = {\"data-format\" : \"turtle\", \"output-format\" : \"nt\"}>\r\n<@action type=\"RdfCast\" data=rdf conf=config; result>\r\n<#assign rdf = result>\r\n<\/@action>\r\n\r\n\r\n<#-- Running the validation -->\r\n<#-- configure the action to output report in NT serialization -->\r\n<#assign config=\"{\\\"shape\\\" : \\\"\"+shape+\"\\\", \\\"output-format\\\" : \\\"nt\\\"  }\">\r\n<@action type=\"ShaclValidator\" data=rdf conf=config; report>\r\n<#--  aggregate the RDF and the report into a variable-->\r\n<#assign rdf = rdf+\"\\n\"+report>\r\n<\/@action>\r\n\r\n<#--  TODO: change the query to return the number of instances in the dataset that are not conforming, i.e., not passing the validation, due to the new restrictions defined in the shape -->\r\n<#assign query = \"\">\r\n<#assign config = '{\"query\" : \"'+query+'\" }'>\r\n<@action type=\"SparqlEngine\" data=rdf conf=config; result>\r\n[=result]\r\n<\/@action>\r\n",
    "expected_result": "{ \"head\": {\r\n    \"vars\": [ \"notConformingInstances\" ]\r\n  } ,\r\n  \"results\": {\r\n    \"bindings\": [\r\n      { \r\n        \"notConformingInstances\": { \"type\": \"literal\" , \"datatype\": \"http:\/\/www.w3.org\/2001\/XMLSchema#integer\" , \"value\": \"63\" }\r\n      }\r\n    ]\r\n  }\r\n}"
}
