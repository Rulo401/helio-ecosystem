{
    "builder": "SIoTRxBuilder",
    "description": "## Theory\r\nThe ***list*** label is used to create loops. The way to use it is: <#list sequence as item>, where *sequence* is the structure to iterate through and *item* is the variable name that will hold a value of the sequence at each step. Moreover, the ***break*** and ***continue*** tags can be used to stop the loop or skip part of it respectively.\r\n```\r\n<#list sequence as item>\r\n\t[=item_index]\r\n<\/#list>\r\n```\r\nBy the way, you can use the built-in function ***_index*** to obtain the index from the item. Other built-in functions related to loops are ***_has_next***, ***_is_first*** and ***_is_last***, among others.\r\n\r\nNotice that another structure for writting loops is supported. In this case some rules can be executed before and after iterating through the sequence.\r\n```\r\n<#list sequence>\r\n\tRules executed if there is at least one item\r\n\t<#items as item>\r\n\t\tRules executed for each item\r\n\t\t<#sep> Separator used between iterations\r\n\t<\/#items>\r\n\tRules executed if there is at least one item\r\n<#else>\r\n\tRules executed if there are no items\r\n<\/#list>\r\n```\r\nIn addition, the ***else*** tag allows you to execute rules in the case the sequence is empty; This tag is optional and can be used in both structures. Finally, the ***sep*** tag is used to display a separator between iterations, however, it will not be added before the first item or after the last one.\r\n## Hands-on\r\n### Task\r\nModify the template in order to print each value preceded by its index.",
    "user_template": "<#assign values=[\"Option1\",\"Option2\",\"Option3\"]>\r\n<#-- WRITE BELOW -->",
    "solution_template": "<#assign values=[\"Option1\",\"Option2\",\"Option3\"]>\r\n<#-- WRITE BELOW and  -->\r\n<#list values as value>\r\n[=value_index]. [=value]\r\n<\/#list>",
    "expected_result": "0. Option1\r\n1. Option2\r\n2. Option3"
}
